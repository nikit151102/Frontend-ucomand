import * as i0 from '@angular/core';
import { Injectable, Component, Input } from '@angular/core';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i1 from '@angular/router';

class CommonUteamLibraryService {
    constructor() { }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: CommonUteamLibraryService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: CommonUteamLibraryService, providedIn: 'root' });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: CommonUteamLibraryService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: () => [] });

class CommonUteamLibraryComponent {
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: CommonUteamLibraryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: CommonUteamLibraryComponent, selector: "lib-common-uteam-library", ngImport: i0, template: `
    <p>
      common-uteam-library works!
    </p>
  `, isInline: true, styles: [""] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: CommonUteamLibraryComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-common-uteam-library', template: `
    <p>
      common-uteam-library works!
    </p>
  ` }]
        }] });

class VacancyLibraryComponent {
    router;
    constructor(router) {
        this.router = router;
    }
    cardItem;
    getSkillsColor(item) {
        switch (item) {
            case 1:
                return '#50B229';
            case 2:
                return '#FAD305';
            case 3:
                return '#EE5354';
            default:
                return '';
        }
    }
    getSkills(item) {
        switch (item) {
            case 1:
                return 'Junior';
            case 2:
                return 'Middle';
            case 3:
                return 'Senior';
            default:
                return '';
        }
    }
    getMotivationColor(item) {
        switch (item) {
            case 'Без оплаты':
                return '#FFAB00';
            case 'Нужна практика':
                return '#CF87F1';
            case 'За долю':
                return '#298CF4';
            case 'За оплату':
                return '#23B9B0';
            default:
                return '';
        }
    }
    viewUser(event, id) {
        event.stopPropagation();
        event.preventDefault();
        this.router.navigate([``, id]);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: VacancyLibraryComponent, deps: [{ token: i1.Router }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: VacancyLibraryComponent, isStandalone: true, selector: "lib-vacancy", inputs: { cardItem: "cardItem" }, ngImport: i0, template: "<div class=\"card\">\r\n    <p class=\"title\">\r\n        {{cardItem.title}}\r\n       \r\n    </p>\r\n    <div class=\"chapterCard\">\r\n        <p class=\"chapterCard-title\" style=\"margin-bottom: 0;\">\r\n            \u0418\u0449\u0443:\r\n        </p>\r\n        <div class=\"lookingCard\">\r\n            <p class=\"chapterCard-value text13Caps\" style=\"margin-top: 0.5rem; width: 90%; margin-bottom: 5px;\">\r\n                {{ cardItem?.profession?.name | uppercase }}\r\n            </p>\r\n            <p [ngStyle]=\"{ 'border-color': getSkillsColor(cardItem.profession.competenceLevel) }\" class=\"lookingCard-level\" *ngIf=\"cardItem?.profession?.competenceLevel\">\r\n                {{ getSkills(cardItem.profession?.competenceLevel)  }}\r\n              </p>\r\n        </div>\r\n        <div class=\"lookingCard\">\r\n            <p class=\"chapterCard-value-eng\" >\r\n                {{ cardItem?.profession?.nameEng | uppercase }}\r\n            </p>\r\n        </div>\r\n        \r\n    </div>\r\n    <div class=\"chapterCard\">\r\n        <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n            \u0420\u0430\u0431\u043E\u0442\u0430:\r\n        </p>\r\n        <div class=\"tags\">\r\n            <!-- <ng-container *ngFor=\"let item of cardItem.skills\"> -->\r\n                <div class=\"work\" >\r\n                    <p class=\"workText\">\r\n                        \u0424\u0440\u0438\u043B\u0430\u043D\u0441/\u041F\u0440\u043E\u0435\u043A\u0442\r\n                    </p>\r\n                </div>\r\n                <div class=\"work\" >\r\n                    <p class=\"workText\">\r\n                        \u0424\u0440\u0438\u043B\u0430\u043D\u0441/\u041F\u0440\u043E\u0435\u043A\u0442\r\n                    </p>\r\n                </div>\r\n            <!-- </ng-container> -->\r\n        </div>\r\n    </div>\r\n    <div class=\"chapterCard\">\r\n        <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n            \u041D\u0430\u0432\u044B\u043A\u0438:\r\n        </p>\r\n        <div class=\"tags\">\r\n            <ng-container *ngFor=\"let item of cardItem.skills\">\r\n                <div class=\"tag\">\r\n                    {{item.name}}\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <div class=\"chapterCard\">\r\n        <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n            \u041C\u043E\u0442\u0438\u0432\u0430\u0446\u0438\u044F:\r\n        </p>\r\n        <div class=\"motivations\">\r\n            <ng-container *ngFor=\"let item of cardItem.motivations\">\r\n                <div class=\"motivation\" [ngStyle]=\"{ 'background': getMotivationColor(item.name) }\">\r\n                    {{ item.name }}\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <div class=\"profile\">\r\n        <div class=\"leftProfileChapter\" (click)=\"viewUser($event, cardItem?.user?.nickname)\">\r\n            <div class=\"logo\">\r\n                <ng-container *ngIf=\"cardItem?.user?.imageLink\">\r\n                    <ng-container *ngIf=\"cardItem?.user?.imageLink.startsWith('https'); else localImage\">\r\n                        <img [src]=\"cardItem?.user?.imageLink\" class=\"logoImg\">\r\n                    </ng-container>\r\n                    <ng-template #localImage>\r\n                        <img [src]=\"'assets/avatars/' + cardItem?.user?.imageLink + '.png'\" class=\"logoImg\">\r\n                    </ng-template>\r\n                </ng-container>\r\n                  <ng-container *ngIf=\"!cardItem?.user?.imageLink\">\r\n                    <img [src]=\"'assets/avatars/default.png'\" alt=\"avatar\">\r\n                  </ng-container>\r\n            </div>\r\n            <div style=\"display: flex; flex-wrap: wrap; flex-direction: column; justify-content: flex-end; margin-bottom: 2px;\">\r\n                <p class=\"fullName\" style=\"margin: 0;\">\r\n                    {{cardItem?.user?.lastName}}\r\n                </p>\r\n                <p class=\"fullName\" style=\"margin: 0;\">\r\n                    {{cardItem?.user?.firstName}}\r\n                </p>\r\n            </div>\r\n           \r\n        </div>\r\n        <div class=\"rightProfileChapter\">\r\n            <p class=\"dateVacancy dateTitle\">\r\n                \u0440\u0430\u0437\u043C\u0435\u0449\u0435\u043D\u043E\r\n            </p>\r\n            <p class=\"dateVacancy dateValue\">\r\n                {{cardItem.creationDate | date: 'dd.MM.yyyy' }}\r\n            </p>\r\n        </div>\r\n        \r\n    </div>\r\n</div>", styles: [".card{display:flex;flex-direction:column;border-radius:1.3rem;padding:12px;width:100%;box-shadow:1px 2px 4px #2828281a;background:var(--background-card);margin-bottom:1rem;break-inside:avoid;transition:transform .3s ease-in-out}.card:hover{-webkit-box-shadow:4px 4px 20px -11px rgba(40,40,40,.35);-moz-box-shadow:4px 4px 20px -11px rgba(40,40,40,.35);box-shadow:4px 4px 20px -11px #28282859;transform:scale(1.012)}.title{font-family:var(--font-Monts);font-weight:600;font-size:var(--subtitle1);line-height:114%;color:var(--font-color);margin-top:5px}.chapterCard-title{font-family:var(--font-Monts);font-weight:500;font-size:var(--text12);line-height:117%;color:var(--font-color)}.chapterCard-value-eng{margin:0;width:90%;font-family:var(--font-Monts);font-weight:500;font-size:.7rem;line-height:117%;text-transform:uppercase;color:var(--font-profession-eng)}.work{border-radius:20px;padding:8px 10px;background:#f3f3f3}.workText{font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:var(--font-color);margin:0}.lookingCard{display:flex;flex-direction:row;align-items:flex-start;justify-content:space-between}.lookingCard-level{margin:0;border:2px solid #fad305;padding:4px 6px;border-radius:5px;font-family:var(--font-Monts);font-weight:700;font-size:12px;line-height:100%;color:var(--font-color)}.tags{display:flex;flex-wrap:wrap;gap:.3rem}.tag{display:flex;align-items:center;border:1px solid #806bff;border-radius:10px;padding:4px 8px;background:var(--tag-background);height:31px;font-family:var(--font-Monts);font-weight:300;font-size:.7rem;line-height:120%;color:var(--font-color)}.motivations{display:flex;flex-wrap:wrap;gap:.3rem}.motivation{border-radius:50px;padding:8px 10px;font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:#fff}.profile{display:flex;flex-direction:row;justify-content:space-between;margin-top:1rem;align-items:flex-end}.leftProfileChapter{display:flex;flex-direction:row;gap:1rem}.rightProfileChapter{display:flex;flex-direction:column}.fullName{font-family:var(--font-Monts);font-weight:500;font-size:var(--text13);line-height:117%;color:var(--font-color)}.dateVacancy{font-family:var(--font-Monts);line-height:120%;color:var(--font-color)}.dateTitle{margin:0;font-weight:400;font-size:var(--text12)}.dateValue{white-space:nowrap;margin:5px 0 0;font-weight:400;font-size:var(--text12)}.logo img{border-radius:30px;width:52px;height:52px}@media (max-width: 1199.98px){.card:hover{background:var(--background-card)}}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "pipe", type: i2.UpperCasePipe, name: "uppercase" }, { kind: "pipe", type: i2.DatePipe, name: "date" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: VacancyLibraryComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-vacancy', standalone: true, imports: [CommonModule], template: "<div class=\"card\">\r\n    <p class=\"title\">\r\n        {{cardItem.title}}\r\n       \r\n    </p>\r\n    <div class=\"chapterCard\">\r\n        <p class=\"chapterCard-title\" style=\"margin-bottom: 0;\">\r\n            \u0418\u0449\u0443:\r\n        </p>\r\n        <div class=\"lookingCard\">\r\n            <p class=\"chapterCard-value text13Caps\" style=\"margin-top: 0.5rem; width: 90%; margin-bottom: 5px;\">\r\n                {{ cardItem?.profession?.name | uppercase }}\r\n            </p>\r\n            <p [ngStyle]=\"{ 'border-color': getSkillsColor(cardItem.profession.competenceLevel) }\" class=\"lookingCard-level\" *ngIf=\"cardItem?.profession?.competenceLevel\">\r\n                {{ getSkills(cardItem.profession?.competenceLevel)  }}\r\n              </p>\r\n        </div>\r\n        <div class=\"lookingCard\">\r\n            <p class=\"chapterCard-value-eng\" >\r\n                {{ cardItem?.profession?.nameEng | uppercase }}\r\n            </p>\r\n        </div>\r\n        \r\n    </div>\r\n    <div class=\"chapterCard\">\r\n        <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n            \u0420\u0430\u0431\u043E\u0442\u0430:\r\n        </p>\r\n        <div class=\"tags\">\r\n            <!-- <ng-container *ngFor=\"let item of cardItem.skills\"> -->\r\n                <div class=\"work\" >\r\n                    <p class=\"workText\">\r\n                        \u0424\u0440\u0438\u043B\u0430\u043D\u0441/\u041F\u0440\u043E\u0435\u043A\u0442\r\n                    </p>\r\n                </div>\r\n                <div class=\"work\" >\r\n                    <p class=\"workText\">\r\n                        \u0424\u0440\u0438\u043B\u0430\u043D\u0441/\u041F\u0440\u043E\u0435\u043A\u0442\r\n                    </p>\r\n                </div>\r\n            <!-- </ng-container> -->\r\n        </div>\r\n    </div>\r\n    <div class=\"chapterCard\">\r\n        <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n            \u041D\u0430\u0432\u044B\u043A\u0438:\r\n        </p>\r\n        <div class=\"tags\">\r\n            <ng-container *ngFor=\"let item of cardItem.skills\">\r\n                <div class=\"tag\">\r\n                    {{item.name}}\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <div class=\"chapterCard\">\r\n        <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n            \u041C\u043E\u0442\u0438\u0432\u0430\u0446\u0438\u044F:\r\n        </p>\r\n        <div class=\"motivations\">\r\n            <ng-container *ngFor=\"let item of cardItem.motivations\">\r\n                <div class=\"motivation\" [ngStyle]=\"{ 'background': getMotivationColor(item.name) }\">\r\n                    {{ item.name }}\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <div class=\"profile\">\r\n        <div class=\"leftProfileChapter\" (click)=\"viewUser($event, cardItem?.user?.nickname)\">\r\n            <div class=\"logo\">\r\n                <ng-container *ngIf=\"cardItem?.user?.imageLink\">\r\n                    <ng-container *ngIf=\"cardItem?.user?.imageLink.startsWith('https'); else localImage\">\r\n                        <img [src]=\"cardItem?.user?.imageLink\" class=\"logoImg\">\r\n                    </ng-container>\r\n                    <ng-template #localImage>\r\n                        <img [src]=\"'assets/avatars/' + cardItem?.user?.imageLink + '.png'\" class=\"logoImg\">\r\n                    </ng-template>\r\n                </ng-container>\r\n                  <ng-container *ngIf=\"!cardItem?.user?.imageLink\">\r\n                    <img [src]=\"'assets/avatars/default.png'\" alt=\"avatar\">\r\n                  </ng-container>\r\n            </div>\r\n            <div style=\"display: flex; flex-wrap: wrap; flex-direction: column; justify-content: flex-end; margin-bottom: 2px;\">\r\n                <p class=\"fullName\" style=\"margin: 0;\">\r\n                    {{cardItem?.user?.lastName}}\r\n                </p>\r\n                <p class=\"fullName\" style=\"margin: 0;\">\r\n                    {{cardItem?.user?.firstName}}\r\n                </p>\r\n            </div>\r\n           \r\n        </div>\r\n        <div class=\"rightProfileChapter\">\r\n            <p class=\"dateVacancy dateTitle\">\r\n                \u0440\u0430\u0437\u043C\u0435\u0449\u0435\u043D\u043E\r\n            </p>\r\n            <p class=\"dateVacancy dateValue\">\r\n                {{cardItem.creationDate | date: 'dd.MM.yyyy' }}\r\n            </p>\r\n        </div>\r\n        \r\n    </div>\r\n</div>", styles: [".card{display:flex;flex-direction:column;border-radius:1.3rem;padding:12px;width:100%;box-shadow:1px 2px 4px #2828281a;background:var(--background-card);margin-bottom:1rem;break-inside:avoid;transition:transform .3s ease-in-out}.card:hover{-webkit-box-shadow:4px 4px 20px -11px rgba(40,40,40,.35);-moz-box-shadow:4px 4px 20px -11px rgba(40,40,40,.35);box-shadow:4px 4px 20px -11px #28282859;transform:scale(1.012)}.title{font-family:var(--font-Monts);font-weight:600;font-size:var(--subtitle1);line-height:114%;color:var(--font-color);margin-top:5px}.chapterCard-title{font-family:var(--font-Monts);font-weight:500;font-size:var(--text12);line-height:117%;color:var(--font-color)}.chapterCard-value-eng{margin:0;width:90%;font-family:var(--font-Monts);font-weight:500;font-size:.7rem;line-height:117%;text-transform:uppercase;color:var(--font-profession-eng)}.work{border-radius:20px;padding:8px 10px;background:#f3f3f3}.workText{font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:var(--font-color);margin:0}.lookingCard{display:flex;flex-direction:row;align-items:flex-start;justify-content:space-between}.lookingCard-level{margin:0;border:2px solid #fad305;padding:4px 6px;border-radius:5px;font-family:var(--font-Monts);font-weight:700;font-size:12px;line-height:100%;color:var(--font-color)}.tags{display:flex;flex-wrap:wrap;gap:.3rem}.tag{display:flex;align-items:center;border:1px solid #806bff;border-radius:10px;padding:4px 8px;background:var(--tag-background);height:31px;font-family:var(--font-Monts);font-weight:300;font-size:.7rem;line-height:120%;color:var(--font-color)}.motivations{display:flex;flex-wrap:wrap;gap:.3rem}.motivation{border-radius:50px;padding:8px 10px;font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:#fff}.profile{display:flex;flex-direction:row;justify-content:space-between;margin-top:1rem;align-items:flex-end}.leftProfileChapter{display:flex;flex-direction:row;gap:1rem}.rightProfileChapter{display:flex;flex-direction:column}.fullName{font-family:var(--font-Monts);font-weight:500;font-size:var(--text13);line-height:117%;color:var(--font-color)}.dateVacancy{font-family:var(--font-Monts);line-height:120%;color:var(--font-color)}.dateTitle{margin:0;font-weight:400;font-size:var(--text12)}.dateValue{white-space:nowrap;margin:5px 0 0;font-weight:400;font-size:var(--text12)}.logo img{border-radius:30px;width:52px;height:52px}@media (max-width: 1199.98px){.card:hover{background:var(--background-card)}}\n"] }]
        }], ctorParameters: () => [{ type: i1.Router }], propDecorators: { cardItem: [{
                type: Input
            }] } });

class ResumeLibraryComponent {
    router;
    constructor(router) {
        this.router = router;
    }
    cardItem;
    visibleSections = [];
    isVisible(section) {
        return this.visibleSections.includes(section);
    }
    getSkillsColor(item) {
        switch (item) {
            case 1:
                return '#50B229';
            case 2:
                return '#FAD305';
            case 3:
                return '#EE5354';
            default:
                return '';
        }
    }
    getSkills(item) {
        switch (item) {
            case 1:
                return 'Junior';
            case 2:
                return 'Middle';
            case 3:
                return 'Senior';
            default:
                return '';
        }
    }
    getSkillText(item) {
        switch (item) {
            case 1:
                return 'Jun';
            case 2:
                return 'Mdl';
            case 3:
                return 'Snr';
            default:
                return '';
        }
    }
    getMotivationColor(item) {
        switch (item) {
            case 'Без оплаты':
                return '#FFAB00';
            case 'Нужна практика':
                return '#CF87F1';
            case 'За долю':
                return '#298CF4';
            case 'За оплату':
                return '#23B9B0';
            default:
                return '';
        }
    }
    viewUser(event, id) {
        event.stopPropagation();
        event.preventDefault();
        this.router.navigate([``, id]);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ResumeLibraryComponent, deps: [{ token: i1.Router }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: ResumeLibraryComponent, isStandalone: true, selector: "lib-resume", inputs: { cardItem: "cardItem", visibleSections: "visibleSections" }, ngImport: i0, template: "<div class=\"card\">\r\n    <!-- \u0421\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u0441\u0442\u044C -->\r\n    <ng-container *ngIf=\"isVisible('profession')\">\r\n        <div class=\"chapterCard\">\r\n            <p class=\"chapterCard-title\" style=\"margin: 0;\">\r\n                \u0421\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u0441\u0442\u044C:\r\n            </p>\r\n            <div class=\"lookingCard\">\r\n                <p class=\"text13Caps\" style=\"margin-bottom: 0;\" *ngIf=\"cardItem.profession\">\r\n                    {{cardItem.profession.name | uppercase }}\r\n                </p>\r\n                <p [ngStyle]=\"{ 'border-color': getSkillsColor(cardItem.profession.competenceLevel) }\"\r\n                    class=\"lookingCard-level\" *ngIf=\"cardItem?.profession?.competenceLevel\">\r\n                    {{ getSkills(cardItem.profession?.competenceLevel) }}\r\n                </p>\r\n            </div>\r\n            <div class=\"lookingCard\">\r\n                <p class=\"chapterCard-value-eng\">\r\n                    {{ cardItem?.profession?.nameEng | uppercase }}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n\r\n    <!-- \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u044C -->\r\n    <ng-container *ngIf=\"isVisible('availability')\">\r\n        <div class=\"chapterCard\">\r\n            <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n                \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u044C:\r\n            </p>\r\n            <div class=\"tags\">\r\n                <div class=\"availability\">\r\n                    <p class=\"tagText\">\r\n                        \u0424\u0440\u0438\u043B\u0430\u043D\u0441/\u041F\u0440\u043E\u0435\u043A\u0442\r\n                    </p>\r\n                </div>\r\n                <div class=\"availability\">\r\n                    <p class=\"tagText\">\r\n                        \u0424\u0440\u0438\u043B\u0430\u043D\u0441/\u041F\u0440\u043E\u0435\u043A\u0442\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n\r\n\r\n    <!-- \u041D\u0430\u0432\u044B\u043A\u0438 -->\r\n    <ng-container *ngIf=\"isVisible('skills')\">\r\n        <div class=\"chapterCard\">\r\n            <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n                \u041D\u0430\u0432\u044B\u043A\u0438:\r\n            </p>\r\n            <div class=\"tags\">\r\n                <ng-container *ngFor=\"let item of cardItem.skills\">\r\n                    <div class=\"tag\" [ngClass]=\"{ 'with-competence-level': item.competenceLevel }\">\r\n                        <p class=\"tagText\">\r\n                            {{item.name}}\r\n                        </p>\r\n                        <p *ngIf=\"item.competenceLevel\"\r\n                            [ngStyle]=\"{ 'background': getSkillsColor(item.competenceLevel) }\" class=\"tag-level\">\r\n                            {{ getSkillText(item.competenceLevel) }}\r\n                        </p>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- \u041C\u043E\u0442\u0438\u0432\u0430\u0446\u0438\u044F -->\r\n    <ng-container *ngIf=\"isVisible('motivations')\">\r\n        <div class=\"chapterCard\">\r\n            <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n                \u041C\u043E\u0442\u0438\u0432\u0430\u0446\u0438\u044F:\r\n            </p>\r\n            <div class=\"motivations\">\r\n                <ng-container *ngFor=\"let item of cardItem.motivations\">\r\n                    <div class=\"motivation\" [ngStyle]=\"{ 'background': getMotivationColor(item.name) }\">\r\n                        {{ item.name }}\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n\r\n    <!-- \u041F\u0440\u043E\u0444\u0438\u043B\u044C -->\r\n    <ng-container *ngIf=\"isVisible('profile')\">\r\n        <div class=\"profile\">\r\n            <div class=\"leftProfileChapter\" (click)=\"viewUser($event, cardItem?.user?.nickname)\">\r\n                <div class=\"logo\">\r\n                    <ng-container *ngIf=\"cardItem?.user?.imageLink\">\r\n                        <ng-container *ngIf=\"cardItem?.user?.imageLink.startsWith('https'); else localImage\">\r\n                            <img [src]=\"cardItem?.user?.imageLink\" class=\"logoImg\">\r\n                        </ng-container>\r\n                        <ng-template #localImage>\r\n                            <img [src]=\"'assets/avatars/' + cardItem?.user?.imageLink + '.png'\" class=\"logoImg\">\r\n                        </ng-template>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf=\"!cardItem?.user?.imageLink\">\r\n                        <img [src]=\"'assets/avatars/default.png'\" alt=\"avatar\">\r\n                    </ng-container>\r\n                </div>\r\n                <div\r\n                    style=\"display: flex; flex-wrap: wrap; flex-direction: column; justify-content: flex-end; margin-bottom: 2px;\">\r\n                    <p class=\"fullName\" style=\"margin: 0;\">\r\n                        {{cardItem?.user?.lastName}}\r\n                    </p>\r\n                    <p class=\"fullName\" style=\"margin: 0;\">\r\n                        {{cardItem?.user?.firstName}}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"rightProfileChapter\">\r\n                <p class=\"dateVacancy dateTitle\">\r\n                    \u0440\u0430\u0437\u043C\u0435\u0449\u0435\u043D\u043E\r\n                </p>\r\n                <p class=\"dateVacancy dateValue\">\r\n                    {{cardItem.creationDate | date: 'dd.MM.yyyy' }}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>", styles: [".card{display:flex;flex-direction:column;border-radius:1.3rem;padding:12px;width:100%;box-shadow:1px 2px 4px #2828281a;background:var(--background-card);margin-bottom:1rem;break-inside:avoid;transition:transform .3s ease-in-out}.card:hover{-webkit-box-shadow:4px 4px 20px -11px rgba(40,40,40,.35);-moz-box-shadow:4px 4px 20px -11px rgba(40,40,40,.35);box-shadow:4px 4px 20px -11px #28282859;transform:scale(1.01)}.chapterCard-title{font-family:var(--font-Monts);font-weight:500;font-size:var(--text12);line-height:117%;color:var(--font-color)}.chapterCard-value{font-family:var(--font-Monts);font-weight:500;font-size:var(--text13);line-height:117%;text-transform:uppercase;color:var(--font-color)}.availability{border-radius:20px;padding:8px 10px;background:#f3f3f3}.lookingCard{display:flex;flex-direction:row;align-items:flex-start;justify-content:space-between}.lookingCard-level{margin:0;border:2px solid #fad305;padding:4px 6px;border-radius:5px;font-family:var(--font-Monts);font-weight:700;font-size:12px;line-height:100%;color:var(--font-color)}.chapterCard-value-eng{margin:0;width:90%;font-family:var(--font-Monts);font-weight:500;font-size:.7rem;line-height:117%;text-transform:uppercase;color:var(--font-profession-eng)}.tags{display:flex;flex-wrap:wrap;gap:.3rem}.tag{display:flex;flex-direction:row;align-items:center;gap:6px;height:31px;border:1px solid #806bff;border-radius:10px;padding:4px 8px;background:var(--tag-background)}.with-competence-level{padding-right:4px!important}.tagText{font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:var(--font-color);margin:0}.tag-level{margin:0;padding:4px 6px;border-radius:5px;font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:#fff}.motivations{display:flex;flex-wrap:wrap;gap:.3rem}.motivation{border-radius:50px;padding:8px 10px;font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:#fff}.profile{display:flex;flex-direction:row;justify-content:space-between;margin-top:1rem;align-items:flex-end}.leftProfileChapter{display:flex;flex-direction:row;gap:1rem}.rightProfileChapter{display:flex;flex-direction:column}.fullName{font-family:var(--font-Monts);font-weight:500;font-size:var(--text13);line-height:117%;color:var(--font-color)}.dateVacancy{font-family:var(--font-Monts);font-weight:400;font-size:var(--text12);font-weight:500;line-height:120%;color:var(--font-color)}.dateTitle{margin:0;font-weight:400;font-size:var(--text12);font-weight:500}.dateValue{white-space:nowrap;margin:5px 0 0;font-weight:400;font-size:var(--text12);font-weight:500}.logo img{border-radius:30px;width:52px;height:52px}@media (max-width: 1199.98px){.card:hover{background:var(--background-card)}}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "pipe", type: i2.UpperCasePipe, name: "uppercase" }, { kind: "pipe", type: i2.DatePipe, name: "date" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ResumeLibraryComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-resume', standalone: true, imports: [CommonModule], template: "<div class=\"card\">\r\n    <!-- \u0421\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u0441\u0442\u044C -->\r\n    <ng-container *ngIf=\"isVisible('profession')\">\r\n        <div class=\"chapterCard\">\r\n            <p class=\"chapterCard-title\" style=\"margin: 0;\">\r\n                \u0421\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u0441\u0442\u044C:\r\n            </p>\r\n            <div class=\"lookingCard\">\r\n                <p class=\"text13Caps\" style=\"margin-bottom: 0;\" *ngIf=\"cardItem.profession\">\r\n                    {{cardItem.profession.name | uppercase }}\r\n                </p>\r\n                <p [ngStyle]=\"{ 'border-color': getSkillsColor(cardItem.profession.competenceLevel) }\"\r\n                    class=\"lookingCard-level\" *ngIf=\"cardItem?.profession?.competenceLevel\">\r\n                    {{ getSkills(cardItem.profession?.competenceLevel) }}\r\n                </p>\r\n            </div>\r\n            <div class=\"lookingCard\">\r\n                <p class=\"chapterCard-value-eng\">\r\n                    {{ cardItem?.profession?.nameEng | uppercase }}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n\r\n    <!-- \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u044C -->\r\n    <ng-container *ngIf=\"isVisible('availability')\">\r\n        <div class=\"chapterCard\">\r\n            <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n                \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u044C:\r\n            </p>\r\n            <div class=\"tags\">\r\n                <div class=\"availability\">\r\n                    <p class=\"tagText\">\r\n                        \u0424\u0440\u0438\u043B\u0430\u043D\u0441/\u041F\u0440\u043E\u0435\u043A\u0442\r\n                    </p>\r\n                </div>\r\n                <div class=\"availability\">\r\n                    <p class=\"tagText\">\r\n                        \u0424\u0440\u0438\u043B\u0430\u043D\u0441/\u041F\u0440\u043E\u0435\u043A\u0442\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n\r\n\r\n    <!-- \u041D\u0430\u0432\u044B\u043A\u0438 -->\r\n    <ng-container *ngIf=\"isVisible('skills')\">\r\n        <div class=\"chapterCard\">\r\n            <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n                \u041D\u0430\u0432\u044B\u043A\u0438:\r\n            </p>\r\n            <div class=\"tags\">\r\n                <ng-container *ngFor=\"let item of cardItem.skills\">\r\n                    <div class=\"tag\" [ngClass]=\"{ 'with-competence-level': item.competenceLevel }\">\r\n                        <p class=\"tagText\">\r\n                            {{item.name}}\r\n                        </p>\r\n                        <p *ngIf=\"item.competenceLevel\"\r\n                            [ngStyle]=\"{ 'background': getSkillsColor(item.competenceLevel) }\" class=\"tag-level\">\r\n                            {{ getSkillText(item.competenceLevel) }}\r\n                        </p>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- \u041C\u043E\u0442\u0438\u0432\u0430\u0446\u0438\u044F -->\r\n    <ng-container *ngIf=\"isVisible('motivations')\">\r\n        <div class=\"chapterCard\">\r\n            <p class=\"chapterCard-title\" style=\"margin-bottom: 0.5rem;\">\r\n                \u041C\u043E\u0442\u0438\u0432\u0430\u0446\u0438\u044F:\r\n            </p>\r\n            <div class=\"motivations\">\r\n                <ng-container *ngFor=\"let item of cardItem.motivations\">\r\n                    <div class=\"motivation\" [ngStyle]=\"{ 'background': getMotivationColor(item.name) }\">\r\n                        {{ item.name }}\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n\r\n    <!-- \u041F\u0440\u043E\u0444\u0438\u043B\u044C -->\r\n    <ng-container *ngIf=\"isVisible('profile')\">\r\n        <div class=\"profile\">\r\n            <div class=\"leftProfileChapter\" (click)=\"viewUser($event, cardItem?.user?.nickname)\">\r\n                <div class=\"logo\">\r\n                    <ng-container *ngIf=\"cardItem?.user?.imageLink\">\r\n                        <ng-container *ngIf=\"cardItem?.user?.imageLink.startsWith('https'); else localImage\">\r\n                            <img [src]=\"cardItem?.user?.imageLink\" class=\"logoImg\">\r\n                        </ng-container>\r\n                        <ng-template #localImage>\r\n                            <img [src]=\"'assets/avatars/' + cardItem?.user?.imageLink + '.png'\" class=\"logoImg\">\r\n                        </ng-template>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf=\"!cardItem?.user?.imageLink\">\r\n                        <img [src]=\"'assets/avatars/default.png'\" alt=\"avatar\">\r\n                    </ng-container>\r\n                </div>\r\n                <div\r\n                    style=\"display: flex; flex-wrap: wrap; flex-direction: column; justify-content: flex-end; margin-bottom: 2px;\">\r\n                    <p class=\"fullName\" style=\"margin: 0;\">\r\n                        {{cardItem?.user?.lastName}}\r\n                    </p>\r\n                    <p class=\"fullName\" style=\"margin: 0;\">\r\n                        {{cardItem?.user?.firstName}}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"rightProfileChapter\">\r\n                <p class=\"dateVacancy dateTitle\">\r\n                    \u0440\u0430\u0437\u043C\u0435\u0449\u0435\u043D\u043E\r\n                </p>\r\n                <p class=\"dateVacancy dateValue\">\r\n                    {{cardItem.creationDate | date: 'dd.MM.yyyy' }}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>", styles: [".card{display:flex;flex-direction:column;border-radius:1.3rem;padding:12px;width:100%;box-shadow:1px 2px 4px #2828281a;background:var(--background-card);margin-bottom:1rem;break-inside:avoid;transition:transform .3s ease-in-out}.card:hover{-webkit-box-shadow:4px 4px 20px -11px rgba(40,40,40,.35);-moz-box-shadow:4px 4px 20px -11px rgba(40,40,40,.35);box-shadow:4px 4px 20px -11px #28282859;transform:scale(1.01)}.chapterCard-title{font-family:var(--font-Monts);font-weight:500;font-size:var(--text12);line-height:117%;color:var(--font-color)}.chapterCard-value{font-family:var(--font-Monts);font-weight:500;font-size:var(--text13);line-height:117%;text-transform:uppercase;color:var(--font-color)}.availability{border-radius:20px;padding:8px 10px;background:#f3f3f3}.lookingCard{display:flex;flex-direction:row;align-items:flex-start;justify-content:space-between}.lookingCard-level{margin:0;border:2px solid #fad305;padding:4px 6px;border-radius:5px;font-family:var(--font-Monts);font-weight:700;font-size:12px;line-height:100%;color:var(--font-color)}.chapterCard-value-eng{margin:0;width:90%;font-family:var(--font-Monts);font-weight:500;font-size:.7rem;line-height:117%;text-transform:uppercase;color:var(--font-profession-eng)}.tags{display:flex;flex-wrap:wrap;gap:.3rem}.tag{display:flex;flex-direction:row;align-items:center;gap:6px;height:31px;border:1px solid #806bff;border-radius:10px;padding:4px 8px;background:var(--tag-background)}.with-competence-level{padding-right:4px!important}.tagText{font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:var(--font-color);margin:0}.tag-level{margin:0;padding:4px 6px;border-radius:5px;font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:#fff}.motivations{display:flex;flex-wrap:wrap;gap:.3rem}.motivation{border-radius:50px;padding:8px 10px;font-family:var(--font-Monts);font-weight:400;font-size:.7rem;line-height:120%;color:#fff}.profile{display:flex;flex-direction:row;justify-content:space-between;margin-top:1rem;align-items:flex-end}.leftProfileChapter{display:flex;flex-direction:row;gap:1rem}.rightProfileChapter{display:flex;flex-direction:column}.fullName{font-family:var(--font-Monts);font-weight:500;font-size:var(--text13);line-height:117%;color:var(--font-color)}.dateVacancy{font-family:var(--font-Monts);font-weight:400;font-size:var(--text12);font-weight:500;line-height:120%;color:var(--font-color)}.dateTitle{margin:0;font-weight:400;font-size:var(--text12);font-weight:500}.dateValue{white-space:nowrap;margin:5px 0 0;font-weight:400;font-size:var(--text12);font-weight:500}.logo img{border-radius:30px;width:52px;height:52px}@media (max-width: 1199.98px){.card:hover{background:var(--background-card)}}\n"] }]
        }], ctorParameters: () => [{ type: i1.Router }], propDecorators: { cardItem: [{
                type: Input
            }], visibleSections: [{
                type: Input
            }] } });

/*
 * Public API Surface of common-uteam-library
 */

/**
 * Generated bundle index. Do not edit.
 */

export { CommonUteamLibraryComponent, CommonUteamLibraryService, ResumeLibraryComponent, VacancyLibraryComponent };
//# sourceMappingURL=common-uteam-library.mjs.map
